.main {
	flex: 1;
	min-height: 0;
	display: flex;
	flex-direction: column;
	padding: var(--main-padding) 0;

	--main-padding: 20px;
	--control-row-height: 120px;
	--gap-row-height: 10px;

	.control_container {
		transition: padding-right 0.3s ease;
		height: var(--control-row-height);
		display: flex;
		align-items: flex-end;
		justify-content: flex-end;
		padding: calc(var(--main-padding) / 2) 0 0 var(--main-padding);
		padding-right: calc(
			var(--main-padding) - (var(--main-padding) - var(--scrollbar-width))
		);
		gap: var(--main-padding);
		button {
			width: 200px;
		}
	}

	/* SCROLLBAR EFFECTS */

	--scrollbar-width: 17px; // this is a "default" value, which gets overridden once the component renders with the calculated scrollbar width (since this varies between browsers).
	padding-right: calc(var(--main-padding) - var(--scrollbar-width));
	transition: padding-right 0.3s ease;
	.grid_container {
		padding-right: 0;
		// reserves space for the scrollbar even when it's not rendered
		scrollbar-gutter: stable;

		transition: padding-right 0.3s ease, scrollbar-color 0.3s ease;
		overflow: hidden;
		scrollbar-color: transparent transparent;
	}
	&:hover {
		padding-right: calc(var(--main-padding) / 2);
		.grid_container {
			overflow-y: auto;
			padding-right: calc(var(--main-padding) / 2);
			scrollbar-color: var(--font-color) var(--bg-color-lighter-2);
		}
		.control_container {
			padding-right: calc(
				calc(var(--main-padding) * 1.5) -
					(var(--main-padding) - var(--scrollbar-width))
			);
		}
	}

	/* END SCROLLBAR EFFECTS */

	.loading_container {
		padding: 10px 20px;
		text-align: center;
	}

	.grid_container {
		max-height: calc(100% - var(--control-row-height));
		padding-left: calc(
			var(--main-padding) - 16px
		); // -16 is estimated based on RowController width and other elements

		.grid {
			border-color: transparent;
			.header_container {
				&.control {
					height: 100%;
				}
				.text {
					background-color: var(--bg-color-lighter-2);
					padding: 7.5px 5px;
				}
				padding: 5px 2.5px 10px 2.5px;
				width: 100%;
				background-color: var(--bg-color-lighter-1);
				box-sizing: border-box;
				margin: 0 px;
				text-align: center;
				&.first {
					padding-left: 0px;

					.text {
						border-top-left-radius: 5px;
						border-bottom-left-radius: 5px;
					}
				}
				&.last {
					padding-right: 0px;
					.text {
						border-top-right-radius: 5px;
						border-bottom-right-radius: 5px;
					}
				}
			}
			.popped_out {
				display: flex;
				position: absolute;
				z-index: 999;

				&:not(.row_controller) {
					box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.3);
				}
				&.row_controller {
					filter: drop-shadow(4px 4px 4px rgba(0, 0, 0, 0.3));
				}
			}

			/* RE-ORDERING ROW EFFECT STYLES */
			.transitions {
				transition: margin 0.2s ease;
			}
		}
	}
}
